# https://adventofcode.com/2021/day/5

make_vent_line = |x0, y0, x1, y1|
  start: make_num2 x0, y0
  end: make_num2 x1, y1
  is_diagonal: |self|
    self.start[0] != self.end[0] and self.start[1] != self.end[1]
  # Yield each position along the vent line
  positions: |self|
    position = self.start
    end = self.end
    diff = self.end - position
    step = match diff.x(), diff.y()
      x, 0 # Horizontal
        make_num2 (if x > 0 then 1 else -1), 0
      0, y # Vertical
        make_num2 0, (if y > 0 then 1 else -1)
      x, y # Diagonal
        axis_length = x.abs()
        make_num2 x / axis_length, y / axis_length
    until position == end
      yield position
      position += step
    yield end

make_vent_map = |vent_lines, allow_diagonal_lines|
  vent_map = {}
  for line in vent_lines
    if allow_diagonal_lines or not line.is_diagonal()
      for position in line.positions()
        vent_map.update position, 0, |line_count| line_count + 1

  return
    grid: vent_map
    count_overlaps: |self|
      self.grid
        .keep |(_, count)| count >= 2
        .count()

parse_input = |input|
  input
    .lines()
    .each |line|
      # e.g. 427,503 -> 809,885
      tokens = line.split ","
      x0 = tokens.next().to_number()
      mid_section = tokens.next().split " "
      y0 = mid_section.next().to_number()
      mid_section.next() # ->
      x1 = mid_section.next().to_number()
      y1 = tokens.next().to_number()
      make_vent_line x0, y0, x1, y1
    .to_tuple()

@main = ||
  t = os.start_timer()

  vent_lines = io.extend_path koto.script_dir, "input", "05"
    >> io.read_to_string
    >> parse_input

  vent_map = make_vent_map vent_lines, false
  print "Part one: ${vent_map.count_overlaps()}" # 5690

  vent_map = make_vent_map vent_lines, true
  print "Part two: ${vent_map.count_overlaps()}" # 17741

  print "{:.3}s", t.elapsed()

@tests =
  @pre_test: |self|
    self.vent_lines = parse_input "\
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2"

  @test part_one: |self|
    vent_map = make_vent_map self.vent_lines, false
    overlaps = vent_map.count_overlaps()
    assert_eq overlaps, 5

  @test part_two: |self|
    vent_map = make_vent_map self.vent_lines, true
    overlaps = vent_map.count_overlaps()
    assert_eq overlaps, 12
